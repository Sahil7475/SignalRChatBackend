name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore SignalRChat.sln

      - name: Build
        run: dotnet build SignalRChat.sln --configuration Release --no-restore

      - name: Publish
        run: dotnet publish ChatBackend.csproj --configuration Release --output ./publish

      - name: Get latest tag
        id: get_tag
        run: |
          git fetch --tags
          latest_tag=$(git tag --sort=-v:refname | head -n 1)
          if [[ -z "$latest_tag" ]]; then
            echo "tag=1.0.0" >> $GITHUB_OUTPUT
          else
            IFS='.' read -r major minor patch <<< "$latest_tag"
            patch=$((patch+1))
            echo "tag=$major.$minor.$patch" >> $GITHUB_OUTPUT
          fi

      - name: Create Release Tag
        uses: actions/github-script@v7
        with:
          script: |
            const tag = process.env['TAG'] || '${{ steps.get_tag.outputs.tag }}';
            const sha = process.env['GITHUB_SHA'] || '${{ github.sha }}';
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${tag}`,
              sha: sha
            });

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          name: Release ${{ steps.get_tag.outputs.tag }}
          files: ./publish/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
